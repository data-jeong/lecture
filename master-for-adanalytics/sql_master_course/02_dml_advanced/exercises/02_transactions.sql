-- Chapter 02: 트랜잭션 실습 문제

-- 문제 1: 계좌 이체 트랜잭션
-- John Doe(account_id=1)에서 Jane Smith(account_id=2)로 1000달러를 이체하세요.
-- 트랜잭션을 사용하여 원자성을 보장하세요.
-- 잔액 부족 시 롤백하도록 처리하세요.



-- 문제 2: 주문 처리 트랜잭션
-- 새로운 주문(order_id=12)을 생성하고, 해당 주문의 상품들 재고를 차감하세요.
-- - customer_id: 1
-- - order_date: 오늘
-- - status: 'Processing'
-- - 주문 상품: product_id=1 (수량 2), product_id=7 (수량 1)
-- 재고가 부족하면 전체 주문을 취소하세요.



-- 문제 3: SAVEPOINT를 활용한 부분 롤백
-- 다음 작업을 트랜잭션으로 처리하세요:
-- 1. 모든 직원의 급여를 5% 인상
-- 2. SAVEPOINT 'salary_increase' 생성
-- 3. Sales 부서 직원 중 급여가 80000 이상인 직원을 삭제
-- 4. 삭제된 직원이 3명 이상이면 SAVEPOINT로 롤백
-- 5. 그렇지 않으면 전체 커밋



-- 문제 4: 동시성 제어 시뮬레이션
-- 두 개의 세션에서 동시에 같은 계좌의 잔액을 수정하는 상황을 시뮬레이션하세요.
-- Session 1: account_id=3의 잔액에서 500 차감
-- Session 2: account_id=3의 잔액에 300 추가
-- 각 세션을 트랜잭션으로 처리하고 결과를 확인하세요.



-- 문제 5: 배치 처리 트랜잭션
-- 다음 작업들을 하나의 트랜잭션으로 처리하세요:
-- 1. 2019년 이전 주문들을 'Archived' 상태로 변경
-- 2. 해당 주문들의 상세 정보를 order_items_archive 테이블로 이동
-- 3. 원본 order_items에서 삭제
-- 4. 작업 중 오류 발생 시 전체 롤백
-- (order_items_archive 테이블은 먼저 생성하세요)